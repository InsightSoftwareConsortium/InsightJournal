{
 "publication": {
  "abstract": "This paper describes a simple class for serial transformations, i.e., the concatenation of other transformations. This can be used for\r\n\\doxygen{ResampleImageFilter}.",
  "authors": [
   {
    "author_fullname": "Rohlfing, Torsten",
    "author_place": 1,
    "persona_email": "torsten@synapse.sri.com",
    "persona_firstname": "Torsten",
    "persona_id": 168,
    "persona_lastname": "Rohlfing"
   }
  ],
  "categories": [
   "Registration",
   "Transforms"
  ],
  "comments": [],
  "date_submitted": "2007-02-13T23:05:32Z",
  "handles": [
   {
    "handle": "1926/487",
    "handle_url": "http://hdl.handle.net/1926/487"
   }
  ],
  "identifiers": {
   "doi": null,
   "pubmed": null
  },
  "journals": [
   {
    "journal_id": 3,
    "journal_name": "The Insight Journal"
   }
  ],
  "publication_id": 143,
  "reviews": [
   {
    "author": {
     "author_email": "tomash.kazmar@seznam.cz",
     "author_firstname": "Tomas",
     "author_id": 762,
     "author_lastname": "Kazmar"
    },
    "content": "<p><strong>Summary:</strong><br />Composition of transformations. ITK still does not have any unified means of<br />transformation composition (or adition), the author tries to fill in this hole.<br /><br /><strong>Hypothesis:</strong><br />Non Applicable<br /><br /><strong>Evidence:</strong><br />Non Applicable<br /><br /><strong>Open Science:</strong><br />All source code and details needed are provided.<br /><br /><strong>Reproducibility:</strong><br />I have compiled and run the code. It would be fine if there were test images<br />and transform files prepared from the author to simplify the first testing.<br /><br /><strong>Use of Open Source Software:</strong><br />Only ITK is used.<br /><br /><strong>Open Source Contributions:</strong><br />With my setup of ITK (only an ITK build) it was impossible to configure the<br />project. Provided CMakeLists.txt uses a LOADPACKAGE macro from IJMacros.txt<br />which fails to include UseITK.cmake correctly. This is caused by the fact<br />it tries to include ITK_INCLUDE_DIR which points to non-existing directory<br />and not ITK_USE_FILE. To compile remove first part of the<br />IF(${Package}_INCLUDE_DIR) block.<br /><br /><strong>Code Quality:</strong><br />Source code is clear and simple as it should be. The only error, as pointed out<br />by another reviewer, is that GetJacobian() implementation is incorrect.<br /><br /><strong>Applicability to other problems:</strong><br />An improved version of this class could be used for many tasks as well as any normal transform.<br /><br /><strong>Suggestions for future work:</strong><br />This class lacks methods to enable using it with registration which is a major<br />drawback. Jacobian computation must be corrected and methods to access to<br />parameters added.<br /><br />I think the way this class stores transforms (a list of transforms) is better<br />than in another IJ entry CombineTransform (a pair of transforms). Maybe a<br />AddTransforms(ListType) method can be added to simplify the usage with<br />TransformReader.<br /><br /><strong>Requests for additional information from authors:</strong><br />None.<br /><br /><strong>Additional Comments:</strong><br />As suggested in itk-users mailing list, a merge of SerialTransform and<br />CombineTransform classes that removes shortcommings of both CombineTransform<br />and SerialTransform would be ideal.<br /><br />An option to specify which parameters are fixed or not, and therefore which can<br />be optimized would be useful.</p>",
    "date": "02-27-2008",
    "review_id": 646
   },
   {
    "author": {
     "author_email": "rupert.brooks@gmail.com",
     "author_firstname": "Rupert",
     "author_id": 171,
     "author_lastname": "Brooks"
    },
    "content": "<p><strong>Summary:</strong><br />The paper describes a class that supports the composition of transforms for the image resampling task. It does not support the registration task. It can handle an arbitrarily long chain of transforms.</p><p><strong>Evidence:</strong><br />A program is provided to demonstrate the class. However, no input or expected output was provided. </p><p><strong>Open Science:</strong><br />The paper adheres to the principles of open science.</p><p> <strong>Reproducibility:</strong><br />I compiled and ran the code without difficulty. In order to test it, i had to modify the code slightly to register the transforms that i used in my input file with the transform factory. I tried some simple test cases and it worked. I only tried in 2D, as the example program is written for that case. </p><p> <strong>Use of Open Source Software:</strong><br />The authors use ITK and CMake</p><p> <strong>Open Source Contributions:</strong></p><p>The contribution is open source.</p><p><strong>Code Quality:</strong><br />The class is somewhat incomplete. Get/Set parameters should be provided, at a minimum. The Get Jacobian method is flawed. No testing code was provided.</p><p> <br /> <strong>Applicability to other problems:</strong><br />This has wide applicability as compound transforms arise frequently in image processing. Unfortunately, the class is somewhat incomplete, since it does not support the registration framework, or get/set parameters. This limits its usefulness as is.</p><p><strong>Suggestions for future work:</strong><br />Future work could clearly be to combine this with the other paper on this topic, the combination transform. It would be very nice to handle the Jacobian and parameters properly so that it could be used in the registration framework. </p>",
    "date": "02-07-2008",
    "review_id": 641
   },
   {
    "author": {
     "author_email": "s.klein@erasmusmc.nl",
     "author_firstname": "Stefan",
     "author_id": 551,
     "author_lastname": "Klein"
    },
    "content": "<p><strong>Summary:</strong><br />The paper describes&nbsp;a class to combine Transforms by means of composition. This is useful. The transform is not meant&nbsp;to&nbsp;be used in the registration framework, as a transform that is optimised.&nbsp;It&nbsp;can be used&nbsp;to resample&nbsp;an image for example. </p><p>This is my first review for the Insight Journal. I apologise if it doesn&#39;t conform to the standards/rules of reviews.</p><p><strong>Hypothesis:</strong><br />Non Applicable</p><p><strong>Evidence:</strong><br />Non Applicable<br /><br /><strong>Open Science:</strong><br />Non Applicable</p><p><strong>Reproducibility:</strong><br />I did not try to compile or run the code</p><p><strong>Use of Open Source Software:</strong><br />ITK</p><p><strong>Open Source Contributions:</strong><br />All necessary code is provided, along with a clear example of usage.</p><p>The paper has quite some overlap with another paper (coauthored by me), 2006-January-June, Combining Transforms in ITK, which&nbsp;describes the CombinationTransform. The advantage of the&nbsp;CombinationTransform is that it supports the registration framework (it implements the Get/SetParameters method) and that it also supports Addition of transforms, instead of Composition. The SerialTransform is however more easy in use, since it accepts more than two&nbsp;transforms. With the CombinationTransform you can set one InitialTransform, which could be again a CombinationTransform; so you need to set the transforms recursively. In the SerialTransform there is simply a list of transforms.</p><p><strong>Code Quality:</strong><br />The code is easy to read. I personally do not like that all function implementations are included the header. I have a few comments:</p><p>- The class provides a method to add transforms to the transform list, but not to clean the transform list. A kind of Initialize() method would be useful.</p><p>- GetInverse could be implemented.</p><p>- The m_TransformList is declared as&nbsp;&quot;private&quot;. I would suggest making it protected, which would allow inheriting classes to provide additional methods to set/get the transforms, or implement&nbsp;the Set/GetParameters,&nbsp;or GetInverse() methods.</p><p>- The implementation of GetJacobian is incorrect. It seems that the author had the &quot;spatial jacobian&quot; in mind. dT/dx, instead of the derivative with respect to the transform parameters, which it should be. Like this it would probably even result in errors, since at line 137-140 the m_Jacobian element (dim,dim) is accessed, while the size of the m_Jacobian is initialised as (dim,0) in the itk::Transform::constructor. Since the Set/GetParameters are not supported by this class, the GetJacobian is useless, I think.</p><p><br /><strong>Applicability to other problems:</strong><br />Non Applicable</p><p><strong>Suggestions for future work:</strong><br />Combining the CombinationTransform and the SerialTransform in one class that has the advantages of both.</p><p><strong>Requests for additional information from authors:</strong><br />none</p><p><strong>Additional Comments:</strong><br />none</p><p>&nbsp;</p>",
    "date": "02-14-2007",
    "review_id": 457
   }
  ],
  "submitted_by_author": {
   "author_email": "torsten@synapse.sri.com",
   "author_firstname": "Torsten",
   "author_id": 168,
   "author_institution": "SRI International",
   "author_lastname": "Rohlfing"
  },
  "tags": [
   "serial transformation",
   "ITK"
  ],
  "title": "Class for Serial Transformations"
 }
}