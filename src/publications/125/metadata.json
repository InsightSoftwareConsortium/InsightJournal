{
 "publication": {
  "abstract": "A common usage when working with Fourier transform is to shift the\r\nthe image to put the zero-frequency component in the center of the\r\nimage. This contribution comes with a filter to perform this\r\ntransform.",
  "authors": [
   {
    "author_fullname": "Lehmann, Gaetan",
    "author_place": 1,
    "persona_email": "gaetan.lehmann@gmail.com",
    "persona_firstname": "Gaetan",
    "persona_id": 328,
    "persona_lastname": "Lehmann"
   }
  ],
  "categories": [],
  "comments": [],
  "date_submitted": "2006-10-18T10:08:51Z",
  "handles": [
   {
    "handle": "1926/321",
    "handle_url": "http://hdl.handle.net/1926/321"
   }
  ],
  "identifiers": {
   "doi": null,
   "pubmed": null
  },
  "journals": [
   {
    "journal_id": 3,
    "journal_name": "The Insight Journal"
   }
  ],
  "publication_id": 125,
  "reviews": [
   {
    "author": {
     "author_email": null,
     "author_firstname": null,
     "author_id": null,
     "author_lastname": null
    },
    "content": "<strong>Summary:</strong><br /><div>The author presents a simple, yet useful filter for swapping image halves across dimensions.\u00c2\u00a0 Such a filter is useful for visualizing low frequency components of the Fourier transform at the center of the output image.\u00c2\u00a0 Many readers will recognize similar functionality offered by the &#39;fftshift&#39; function in Matlab.</div><div><br /> <strong>Evidence:</strong><br /> </div><div>The author provides two images to demonstrate functionality as well as the output images.</div><div><br /> <strong>Open Science:</strong><br /> </div><div>The author&#39;s submission adheres to the standards of open science (e.g. source code transparency, input images with corresponding output images).\u00c2\u00a0</div><div> <br /> <strong>Reproducibility:</strong><br /> I did reproduce the work of the authors in addition to testing the filter with two of my own 2-D and 3-D images.\u00c2\u00a0 Fortunately, the filter was simple enough to determine usage.\u00c2\u00a0 However, it would be helpful to have a usage print-out in the test code itself.\u00c2\u00a0 In addition, although the filter is indeed simple, it would also be helpful for further explanation of the included figures (e.g. the author simply refers to &quot;the figure below&quot; in discussing the SetInverse() function).\u00c2\u00a0\u00c2\u00a0</div><div><br /></div><div><strong>Use of Open Source Software:</strong><br />The filter constitutes an extension of ITK.</div><div><br /> <strong>Open Source Contributions:</strong><br /></div><div>The author provides the source code.</div><div><br /> <strong>Code Quality:</strong><br />Code quality is good.</div><div><br /> <strong>Suggestions for future work:</strong><br /></div><div>No suggestions.</div><div><br /> <strong>Requests for additional information from authors:</strong><br />None.<br /><br /></div>",
    "date": "11-03-2006",
    "review_id": 426
   },
   {
    "author": {
     "author_email": "jakub.bican@matfyz.cz",
     "author_firstname": "Jakub",
     "author_id": 81,
     "author_lastname": "Bican"
    },
    "content": "<p><strong>Summary:</strong><br />fftshift is a common operation to visualise fourier-transformed image. This contribution presents a new filter that performs this operation. </p><p><br /> <strong>Hypothesis:</strong><br />N/A<br /> <br /> <strong>Evidence:</strong><br />Author states that this is a common operation which is missing in ITK - this is obviously true. </p><p><br /> <strong>Open Science:</strong><br />Do the authors provide the source code of the programs used in their experiments? <strong>YES<br /></strong>Do the authors provide the input images that they used? <strong>YES<br /></strong>Or are those images publicly available? <strong>N/A<br /></strong>Do the authors provide the output images that they show in the paper? <strong>YES</strong><br />Do the authors provide enough details for you to be able to replicate their work? <strong>YES</strong></p><p> <br /> <strong>Reproducibility:</strong><br /> Did you reproduce the authors&rsquo; work? <strong>YES</strong><br /> Did you download their code? Did you compile it? Did you run it? <strong>YES/YES/YES</strong><br /> Did you managed to get the same results that they reported? <strong>YES</strong><br /> Were there information missing from the paper, that was necessary for you to reproduce the work? <strong>NO</strong><br />Suggest improvements that will make easier for future readers to reproduce this work. <strong>not necessary</strong><br /><br /> <strong>Use of Open Source Software:</strong><br />ITK/CMake</p><p><br /> <strong>Open Source Contributions:</strong><br /> Do the author&rsquo;s provide their source code? <strong>YES<br /></strong>Is it in a form that is usable? <strong>YES<br /></strong>Do they describe clearly how to use of the code? <strong>YES<br /></strong>How long did it take you to use that code? <strong>few seconds</strong> </p><p> <br /> <strong>Code Quality:</strong><br />Was the code easy to read? <strong>YES<br /></strong>Did they use a modern coding style? <strong>YES<br /></strong>Did they rely on non-portable mechanism? <strong>NO<br /></strong>Was it suitable for multiple-platforms? <strong>YES</strong></p><p> <br /> <strong>Applicability to other problems:</strong><br />N/A<br /> <br /> <strong>Suggestions for future work &amp; comments:</strong><br />I tried to validate the output - i executed the test code on BrainProtonDensitySliceBorder20.png image from ITK examples data set and then tried to compare the results (forward and inverse) with results of matlab fftshift function.</p><p>I discovered, that the <strong>forward</strong> run (3. parameter==0 on commandline) of this code does what does the <strong>ifftshift</strong> function of matlab and the <strong>inverse</strong> run (3. parameter==1) has the same result as <strong>fftshift</strong> function.</p><p>I suppose to author to check if i am true and possibly switch the forward/inverse behavior to let the functionality match with the matlab.</p>",
    "date": "11-01-2006",
    "review_id": 425
   },
   {
    "author": {
     "author_email": "pierre.seroul@gmail.com",
     "author_firstname": "Pierre",
     "author_id": 523,
     "author_lastname": "Seroul"
    },
    "content": "<p><strong>Summary:</strong><br />Similarly to the fftshift and ifftshift functions of Matlab, this filter swaps the &quot;half-spaces&quot; of the input image along each dimension.<br /> <br /> <strong>Evidence:</strong><br />The author provides two input images and their corresponding outputs using or not the &quot;inverse&quot; option.<br /> <br /> <strong>Open Science:</strong><br />The author provides the source code and an example to reproduce his experiments. He also provides the images.<br /><br /> <strong>Reproducibility:</strong><br />I compiled the code using CMake 2.4 and Visual C++ 2005 Express on Windows XP SP2, there is no error or warning. I ran it with different types of image supported by ITK (png, jpg, tiff, gif, 24-bit bitmap) and it works great.<br />The results are easily reproducible with the information from the paper.<br /><br /> <strong>Use of Open Source Software:</strong><br />The authors use ITK.<br /><br /> <strong>Open Source Contributions:</strong><br />The author provides his source code and describes clearly how to use it.<br /><br /> <strong>Code Quality:</strong><br />The code is easy to read and all the necessary comments are presents.<br /><br /> <strong>Requests for additional information from authors:</strong><br />Maybe the author could shortly describe how the filter puts the zero-frequency component in the center of the image (swapping parts of the image) in the pdf file. </p>",
    "date": "12-05-2006",
    "review_id": 441
   }
  ],
  "submitted_by_author": {
   "author_email": "gaetan.lehmann@gmail.com",
   "author_firstname": "Gaetan",
   "author_fullname": "Lehmann, Gaetan",
   "author_id": 328,
   "author_institution": "INRA",
   "author_lastname": "Lehmann"
  },
  "tags": null,
  "title": "FFT Shift"
 }
}