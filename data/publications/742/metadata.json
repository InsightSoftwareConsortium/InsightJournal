{
  "publication": {
    "abstract": "This paper describes the implementation of a resampling \ufb01lter for Diffusion Tensor Images (DTI) in the Insight ToolKit (ITK). ITK already contains a \ufb01lter for resampling scalar and vector images as well as several transformation and interpolation classes. However, due to the directional nature of DT images, using the existing classes would result in losing the structural information of the image.\n We developed a new resampling \ufb01lter, speci\ufb01c to DTI, that preserves the structure by applying a rotation directly on the tensors while performing the transformation of the image. New transformation and interpolator classes have also been implemented to handle tensors correctly. The new transformation classes are based on algorithms described by D.C. Alexander et al. Finally, three \ufb01lters have been written to correct symmetric semi-de\ufb01nite matrices that would no longer be positive after the resampling process and project them into the tensors\u2019 space. In addition, a software based on the new classes has been developed and is provided with this article.",
    "articles": [
      "bafybeiavu7evbvkhvyhhchwu6ypts5jm4ww4zomay6fznp6ctiovkjvlyq",
      null,
      null,
      null,
      "bafybeihibc4wc2f5zctsm2kbvaqk2unc4ei2mturniwwtu7k346fgmzraa",
      "bafybeiavu7evbvkhvyhhchwu6ypts5jm4ww4zomay6fznp6ctiovkjvlyq",
      "bafybeibu6edhqgswxkj2fcriosnbm5sk57aycj2rznyqpjwiq7zvwq6myi",
      "bafybeibu6edhqgswxkj2fcriosnbm5sk57aycj2rznyqpjwiq7zvwq6myi",
      null,
      null,
      null,
      null,
      null
    ],
    "authors": [
      {
        "author_fullname": "Budin, Francois",
        "author_place": 1,
        "persona_email": "fbudin@unc.edu",
        "persona_firstname": "Francois",
        "persona_id": 2586,
        "persona_lastname": "Budin"
      },
      {
        "author_fullname": "Bouix, Sylvain",
        "author_place": 2,
        "persona_email": "sylvain@bwh.harvard.edu",
        "persona_firstname": "Sylvain",
        "persona_id": 87,
        "persona_lastname": "Bouix"
      },
      {
        "author_fullname": "Shenton, Martha",
        "author_place": 3,
        "persona_id": null
      },
      {
        "author_fullname": "Styner, Martin",
        "author_place": 4,
        "persona_email": "styner@cs.unc.edu",
        "persona_firstname": "Martin",
        "persona_id": 28,
        "persona_lastname": "Styner"
      },
      {
        "author_fullname": "Oguz, Ipek",
        "author_place": 5,
        "persona_email": "ipek@cs.unc.edu",
        "persona_firstname": "Ipek",
        "persona_id": 122,
        "persona_lastname": "Oguz"
      }
    ],
    "categories": [
      "Reformating and tensor reorientation",
      "Resampling",
      "Transforms"
    ],
    "comments": [
      {
        "content": "The some implementation is mathematically incorrect and inefficient.\r\n\r\n(1) In itkWarpTransform3D::GetJacobian the orientation (direction) of images is NOT considered.\r\n\r\n(2) In itkDiffusionTensor3DFSAffineTransform, the rotation matrix is calculated in a highly inefficient way. Eigen analysis, matrix inversion and even complex numbers get involved. SVD will be much faster, but not used.  \r\n\r\n(3) In itkDiffusionTensor3DNonRigidTransform: the equation used seems to be wrong. Let the transformation be y = Ax + b, and rotation component of A be R. The relationship between Tensor( y ) and Tensor( x ) by Finite Strain (FS) transformation shall be: Tensor( y ) = R * Tensor( x ) * R^t.  In deformation, we get Tensor( y ) from the moving image by interpolation, then the warped value at location x shall be Tensor( x ) = R^t Tensor( y ) * R, but Tensor( x ) = R Tensor( y ) * R^t.  This is incorrect.  This seems only be related with the deformation part of the package.",
        "date": "2013-04-03T17:59:50",
        "persona_email": null,
        "persona_firstname": null,
        "persona_id": 7456,
        "persona_lastname": null
      }
    ],
    "date_submitted": "2012-12-19 11:08:32",
    "journals": [
      {
        "journal_id": 3,
        "journal_name": "The Insight Journal"
      }
    ],
    "license": "You are licensing your work to Kitware Inc. under the\nCreative Commons Attribution License Version 3.0.\n\nKitware Inc. agrees to the following:\n\nKitware is free\n * to copy, distribute, display, and perform the work\n * to make derivative works\n * to make commercial use of the work\n\nUnder the following conditions:\n\\\"by Attribution\\\" - Kitware must attribute the work in the manner specified by the author or licensor.\n\n * For any reuse or distribution, they must make clear to others the license terms of this work.\n * Any of these conditions can be waived if they get permission from the copyright holder.\n\nYour fair use and other rights are in no way affected by the above.\n\nThis is a human-readable summary of the Legal Code (the full license) available at\nhttp://creativecommons.org/licenses/by/3.0/legalcode",
    "publication_id": 742,
    "reviews": [],
    "revisions": [
      {
        "article": "bafybeiavu7evbvkhvyhhchwu6ypts5jm4ww4zomay6fznp6ctiovkjvlyq",
        "dapp": null,
        "dataset": null,
        "doi": null,
        "handle": "10380/3189",
        "source_code": null,
        "source_code_git_ref": null
      }
    ],
    "source_code_git_repo": "https://github.com/midas-journal/midas-journal-742.git",
    "submitted_by_author": {
      "author_email": "fbudin@unc.edu",
      "author_firstname": "Francois",
      "author_fullname": "Budin, Francois",
      "author_id": 2586,
      "author_institution": "UNC",
      "author_lastname": "Budin"
    },
    "tags": [
      "ITK",
      "resampling",
      "DTI"
    ],
    "title": "An ITK Implementation of a Diffusion Tensor Images Resampling Filter"
  }
}