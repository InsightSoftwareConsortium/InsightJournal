{
  "publication": {
    "abstract": "ModulusImageFilter is a simple image filter to compute the modulus (x % dividend) pixel-wise.",
    "articles": [
      "bafkreiatmfjyk2swhbvickrqh7nqyrnj6xiaijjpdmbwcnuj433swldqyy"
    ],
    "authors": [
      {
        "author_fullname": "Lehmann, Gaetan",
        "author_place": 1,
        "persona_email": "gaetan.lehmann@gmail.com",
        "persona_firstname": "Gaetan",
        "persona_id": 328,
        "persona_lastname": "Lehmann"
      }
    ],
    "categories": [
      "Filtering"
    ],
    "comments": [],
    "date_submitted": "2005-11-23T13:39:27Z",
    "journals": [
      {
        "journal_id": 3,
        "journal_name": "The Insight Journal"
      }
    ],
    "license": "You are licensing your work to Kitware Inc. under the\nCreative Commons Attribution License Version 3.0.\n\nKitware Inc. agrees to the following:\n\nKitware is free\n * to copy, distribute, display, and perform the work\n * to make derivative works\n * to make commercial use of the work\n\nUnder the following conditions:\n\\\"by Attribution\\\" - Kitware must attribute the work in the manner specified by the author or licensor.\n\n * For any reuse or distribution, they must make clear to others the license terms of this work.\n * Any of these conditions can be waived if they get permission from the copyright holder.\n\nYour fair use and other rights are in no way affected by the above.\n\nThis is a human-readable summary of the Legal Code (the full license) available at\nhttp://creativecommons.org/licenses/by/3.0/legalcode",
    "publication_id": 61,
    "reviews": [
      {
        "author": {
          "author_email": "millerjv@research.ge.com",
          "author_firstname": "James",
          "author_id": 232,
          "author_lastname": "Miller"
        },
        "content": "<b>Summary:</b>\r\nUnary functor filter to perform the modulus operator per pixel.\r\n\r\n\r\n<b>Use of Open Source Software:</b>\r\nThis is subclass of UnaryFunctorImageFilter\r\n\r\n<b>Code Quality:</b>\r\nVisual inspection of the code looks fine.\r\n\r\n\r\n<b>Suggestions for future work:</b>\r\nShould probably use the ConceptChecking facilities to ensure the input image type is integral.\r\n\r\n",
        "date": "01-27-2006",
        "review_id": 153
      },
      {
        "author": {
          "author_email": "bill.lorensen@gmail.com",
          "author_firstname": "Bill",
          "author_id": 2746,
          "author_lastname": "Lorensen"
        },
        "content": "<b>Summary:</b>\r\nAn itk UnaryImageFilter that computes the modulus of an image.\r\n \r\n<b>Evidence:</b>\r\nThe figures in the paper illustrate the technique. A test is also provided with both input and output images.\r\n\r\n<b>Open Science:</b>\r\nAll the code is present.\r\n\r\n<b>Reproducibility:</b>\r\nI downloaded the code. It compiled on both Visual Studio 7 and Borland.\r\nI had to edit the CMakeLists.txt file to add ${EXECUTABLE_OUTPUT_PATH} to the ADD_TEST command so that I could run the tests with ctest.\r\n<pre>\r\nADD_TEST(Modulus ${EXECUTABLE_OUTPUT_PATH}/modulus ${CMAKE_SOURCE_DIR}/Spots.png out.png distance.png)\r\nADD_TEST(CompareImage ${EXECUTABLE_OUTPUT_PATH}/ImageCompare out.png ${CMAKE_SOURCE_DIR}/modulus.png)\r\n</pre>\r\n\r\n<b>Use of Open Source Software:</b>\r\nThe author used CMake and itk.\r\n\r\n<b>Open Source Contributions:</b>\r\nAll source and test code was provided.\r\n\r\n<b>Code Quality:</b>\r\nProgramming style conforms to itk style. Name of class and methods are acceptable. A PrintSelf method is provided.\r\n\r\n<b>Suggestions for future work:</b>\r\nBefore adding to itk, the operator== and operator!= methods should be added to the Functor. This corresponds to recent changes in itk. Also, the test should be modified to use the itk testing framework before adding to itk. This work can be done by the itk Shepard for this code.\r\n",
        "date": "01-30-2006",
        "review_id": 160
      }
    ],
    "revisions": [
      {
        "article": "bafkreiatmfjyk2swhbvickrqh7nqyrnj6xiaijjpdmbwcnuj433swldqyy",
        "dapp": null,
        "dataset": null,
        "doi": null,
        "handle": "1926/144",
        "source_code": null,
        "source_code_git_ref": null
      }
    ],
    "source_code_git_repo": null,
    "submitted_by_author": {
      "author_email": "gaetan.lehmann@gmail.com",
      "author_firstname": "Gaetan",
      "author_fullname": "Lehmann, Gaetan",
      "author_id": 328,
      "author_institution": "INRA",
      "author_lastname": "Lehmann"
    },
    "tags": [
      "Modulus",
      "UnaryFunctorImageFilter"
    ],
    "title": "ModulusImageFilter"
  }
}