{
  "publication": {
    "abstract": "Volumetric layers often encountered in medical image analysis are characterized by double and nested bounding surfaces. The thickness of a volumetric layer at a point on the bounding surface is the distance from that point to the opposite surface. There exist several definitions for the layer thickness. A newly proposed thickness definition is the radial thickness, which is defined as the distance between each pair of corresponding points on the two surfaces with the same polar coordinate. The thickness values calculated by the radial thickness definition are unique and does not depend on the starting surface. In this paper, we describe a class for calculating the radial thickness of one volumetric layer represented as coupled and nested triangle meshes. \r\n\r\nThe class, vtkRadialThicknessCalculate, is implemented using the Visualization Toolkit (VTK). In this document, we describe the radial thickness calculation algorithm and provide the user with the source code and the input data to reproduce the results. The radial thickness calculation described in this paper has a variety of applications including the thickness calculation for the skull vault, which is the original motivation for this work.",
    "articles": [
      "bafkreidtiqvfk5mtjwtx5nas4l6jzmjout6yiwzqiws2ston52zqngy7jy",
      "bafkreidtiqvfk5mtjwtx5nas4l6jzmjout6yiwzqiws2ston52zqngy7jy"
    ],
    "authors": [
      {
        "author_fullname": "Wang, Defeng",
        "author_place": 1,
        "persona_email": "dfwang@cse.cuhk.edu.hk",
        "persona_firstname": "Defeng",
        "persona_id": 618,
        "persona_lastname": "Wang"
      },
      {
        "author_fullname": "Shi, Lin",
        "author_place": 2,
        "persona_email": "lshi@cse.cuhk.edu.hk",
        "persona_firstname": "Lin",
        "persona_id": 619,
        "persona_lastname": "Shi"
      },
      {
        "author_fullname": "Heng, Pheng Ann",
        "author_place": 3,
        "persona_id": null
      }
    ],
    "categories": [
      "Active appearance models",
      "CMake",
      "Code memory optimization",
      "Code speed optimization",
      "Data",
      "Data Representation",
      "Generic Programming",
      "IO",
      "Iterators",
      "Linear Algebra",
      "Mathematics",
      "Mesh",
      "Optimization",
      "Programming",
      "Statistical shape models"
    ],
    "comments": [],
    "date_submitted": "2007-07-02",
    "journals": [
      {
        "journal_id": 3,
        "journal_name": "The Insight Journal"
      }
    ],
    "license": "You are licensing your work to Kitware Inc. under the\nCreative Commons Attribution License Version 3.0.\n\nKitware Inc. agrees to the following:\n\nKitware is free\n * to copy, distribute, display, and perform the work\n * to make derivative works\n * to make commercial use of the work\n\nUnder the following conditions:\n\\\"by Attribution\\\" - Kitware must attribute the work in the manner specified by the author or licensor.\n\n * For any reuse or distribution, they must make clear to others the license terms of this work.\n * Any of these conditions can be waived if they get permission from the copyright holder.\n\nYour fair use and other rights are in no way affected by the above.\n\nThis is a human-readable summary of the Legal Code (the full license) available at\nhttp://creativecommons.org/licenses/by/3.0/legalcode",
    "publication_id": 158,
    "reviews": [
      {
        "author": {
          "author_email": "luis.ibanez@kitware.com",
          "author_firstname": "Luis",
          "author_id": 4,
          "author_lastname": "Ibanez"
        },
        "content": "<p><strong>Summary:</strong></p><p>This paper describes the implementation of a class for measuring surface to surface distance.</p><p>The paper provides the source code, input data, and easy-to-run examples. <br /> <br /> <strong>Hypothesis:</strong></p><p>Not quite applicable.</p><p>The paper mention the implicit hypothesis that the radial distance has certain advantages with respect to the closest distance and normal distance. However such comparison is not the real focus of the paper. Instead, the paper describes the implementation of the radial distance, and that&#39;s in my opinion perfectly fine. </p><p><br /> <strong>Evidence:</strong></p><p>The authors provide a tool that readers can easily use to compute distances between surfaces, and by that mean, eventually compare results against other surface distance definitions. </p><p> <br /> <strong>Open Science:</strong></p><p>The paper follows very well the fundamental principles of Open Science. </p><p>The authors provide all the material required for replicating their work: source code, input data, output data, and examples on how to use the code. </p><p>The paper clearly describes the fundamentals of their implementation.</p><p>In particular it was nice to see the organization of the paper into : </p><ul><li>Motivation </li><li>Mathematical principles </li><li>User&#39;s guide (how to use the code) </li></ul><p>The paper is concise, clear and goes to the point.</p><p>This is really the kind of easy-to-use contribution that will prove to be useful to the community. </p><p><br /> <strong>Reproducibility:</strong></p><p>The authors provided all the elements required to easily reproduce the work that they describe in the paper.</p><ul><li>Source code</li><li>Input data</li><li>Source code examples <br /></li><li>Output data<br /></li></ul><p>The only thing that may have been desirable to have is a way of computing the error, or difference between two distance files. But this is more for the convenience of whoever (...me in this case...) is trying to numerically verify the results of when replicating the work. A quick &quot;string text&quot; comparison of the provided output files against the output files that I got when running the provided tests indicate that the numerical values are very close.</p><p>It was very easy to rerun the code. The authors did a great job on facilitating the reproducibility of the code.</p><p>I couldn&#39;t reproduce Figure 2 with KWMeshVisu , where the inner and outer surfaces are shown using transparency. Not a big deal, I guess the figure was generated with a vtk script. </p><p>When attempting to do it using ParaView, it seems that the topology of the mesh is not well constructed. Although it looks fine when loaded with KWMeshVisu. </p><p>I especulate that it is probably due to an end-of-line conversion. </p><p> I&#39;m running the the code on Debian Linux, compiling with Gcc 4.1 in Release mode. </p><p><br /> <br /> <strong>Use of Open Source Software:</strong></p><p> The authors used the Visualization Toolkit VTK, and they also took advantage of a previous submission to the Insight Journal (KWMeshVisu)</p><p> <br /><br /> <br /> <strong>Open Source Contributions:</strong></p><p>The authors provide the source code of the class that computes the distances, and source code for the associated example. </p><p>It compiled and run without any problem. It tooke me just about 10 minutes to build it an run one of the examples. </p><p>&nbsp;</p><p> <strong>Code Quality:</strong></p><p>The code is nicely organized</p><p>The code is clear and easy to read. </p><p>The class that implements the distance measurement is easy to use. </p><p>It is however doing a little bit too much, since presumably if this class gets introduced into VTK (and it should), the functionalities of writing the distance files should be removed, and the class will be reduced to a filter that computes scalar properties on a surface, given two input surfaces.</p>The coding style would have to be reviewed according to VTK guidelines.<br /><br />There is no reason to believe that the code couldn&#39;t be portable among many platforms.<br /><p> <br /> <strong>Applicability to other problems:</strong></p><p>Measuring distances between surfaces is an important tool for many applications. In particular for comparing image segmentation results and therefore for validation studies.&nbsp;</p><p>The authors provide us with an easy to use hammer, that will prove to be very useful in any&nbsp; image analysis toolkit. </p><p> <br /> <strong>Suggestions for future work:</strong></p><p>The work is pretty compact and useful in its current form.</p><p>It could be interesting to&nbsp; use variations of this class for driving a deformable-surface segmentation method, but that&#39;s probably too far from the interest of the authors. (or not ?)</p><p>As a compact task for a course project, it will be nice to create an ITK version of this filter. For example based on the recently added QuadEdgeMesh.&nbsp;</p><p><br /> <br /> <strong>Requests for additional information from authors:</strong></p><p>The radial distance is critically dependent of the choice of center of polar coordinates. </p><p>The authors missed to elaborate a bit more on how important that choice is, and how they computed the center. </p><p>The class provide the option of using precomputed directions, but surprisingly it doesn&#39;t allow the user to provide a customized center. </p><p>Such option will be very easy to add. </p><p>This extra option is important because in many anatomical structure, the centroid of the surface, is not necessarily the best center of polar coordinates for describing the surface. For example if I had a section of the femur condyle and I&#39;m interested in measuring cartilage thickness, I should use the center of the (almost spherical) condyle joint, as opposed to the centroid of the points that happen to be in the section of surface that I have.</p><p>Fortunately, the code modifications are minimal. It is probably enough to add an enum mode for selecting between using a user-provided center or computing a center from the master surface.<br /><br /><br /> <br /> <strong>Additional Comments:</strong><br /> </p><p>Great paper !.</p><p>&nbsp;It is refreshing to finally get to perform real &quot;peer-reviews&quot; by actually being able to replicate the work that is described in a paper. </p><p>&nbsp;</p><p>&nbsp;</p>",
        "date": "09-12-2007",
        "review_id": 569
      }
    ],
    "revisions": [
      {
        "article": "bafkreidtiqvfk5mtjwtx5nas4l6jzmjout6yiwzqiws2ston52zqngy7jy",
        "citation_list": [
          {
            "doi": "10.1016/j.compmedimag.2006.03.009",
            "key": "ref1",
            "score": 135.29887,
            "unstructured": "Left-ventricle myocardium segmentation using a coupled level-set with a priori knowledge+Computerized Medical Imaging and Graphics+30+255C262+2006+M. Lynch+O. Ghita+P.F. Whelan"
          },
          {
            "doi": "10.1006/nimg.1999.0534",
            "key": "ref2",
            "score": 92.010025,
            "unstructured": "-d extraction of inner and outer surfaces of cerebral cortex from MRI+NeuroImage+12+3+340+356+2000+D. MacDonald"
          },
          {
            "doi": "10.1080/10867651.1997.10487468",
            "key": "ref3",
            "score": 91.64101,
            "unstructured": "Fast, minimum storage ray/triangle intersection+Journal of Graphics Tools+2+1+5+28+1997+T. Mo+B. Trumbore"
          },
          {
            "key": "ref4",
            "score": 36.63827,
            "unstructured": "KWMeshvisu: A mesh visualization tool for shape analysis+In IJ - 2006 MICCAI Open Science Workshop+2006+4+1+Ipek Oguz"
          },
          {
            "doi": "10.1007/11866565_22",
            "key": "ref5",
            "score": 100.53187,
            "unstructured": "Morphometric analysis for pathological abnormality detection in the skull vaults of adolescent idiopathic scoliosis girls+In Proc. MICCAI+175+182+2006+L. Shi+P.A. Heng"
          },
          {
            "key": "ref6",
            "score": 51.777664,
            "unstructured": "Landmark correspondence optimization for coupled surfaces+In MICCAI+2007+1+5+L. Shi+D. Wang+P.A. Heng"
          }
        ],
        "dapp": null,
        "dataset": null,
        "doi": null,
        "handle": "1926/552",
        "source_code": "bafybeif4lwhphzsaoavssbqx35ynctuwiv3jeylxqt33pgw4uodrrcmyaa",
        "source_code_git_ref": null
      }
    ],
    "source_code_git_repo": null,
    "submitted_by_author": {
      "author_email": "dfwang@cse.cuhk.edu.hk",
      "author_firstname": "Defeng",
      "author_fullname": "Wang, Defeng",
      "author_id": 618,
      "author_institution": "The Chinese University of Hong Kong",
      "author_lastname": "Wang"
    },
    "tags": [
      "Radial Thickness",
      "Volumetric Layers"
    ],
    "title": "Radial Thickness Calculation and Visualization for Volumetric Layers"
  }
}