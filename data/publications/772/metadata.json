{
  "publication": {
    "abstract": "We have created a wrapper package named SimVTK that allows VTK, and third-party classes derived from VTK classes, to be seamlessly integrated with MATLAB's Simulink interface. Our package generates a loadable Simulink module for each VTK class, which is then represented as a \"block\" on the Simulink canvas, and can be connected with other blocks to form a pipeline. Each block can be double-clicked to bring up a dialog box that allows introspection and control of the VTK class. After a VTK pipeline has been built, it can be run interactively from within Simulink. The outputs of the pipeline can be displayed in an interactive render window, written to a disk file, or exported to a MATLAB variable. Within Simulink, the VTK pipeline can also be connected to the ITK pipeline through the use of our SimITK package. We generate the VTK-Simulink wrapper automatically though the use of CMake build scripts, with XML as an intermediate representation of the VTK class interfaces.\n",
    "authors": [
      {
        "author_fullname": "Gobbi, David G.",
        "author_place": 1,
        "persona_email": "david.gobbi@gmail.com",
        "persona_firstname": "David",
        "persona_id": 881,
        "persona_lastname": "Gobbi"
      },
      {
        "author_fullname": "Mousavi, Parvin",
        "author_place": 2,
        "persona_id": null
      },
      {
        "author_fullname": "Campigotto, Adam",
        "author_place": 3,
        "persona_id": null
      },
      {
        "author_fullname": "Dickinson, Andrew W. L.",
        "author_place": 4,
        "persona_id": null
      },
      {
        "author_fullname": "Abolmaesumi, Parvin",
        "author_place": 5,
        "persona_id": null
      }
    ],
    "categories": [
      "Filtering",
      "Language binding",
      "Registration"
    ],
    "comments": [],
    "date_submitted": "2010-11-01 01:14:32",
    "journals": [
      {
        "journal_id": 35,
        "journal_name": "The VTK Journal"
      }
    ],
    "license": "You are licensing your work to Kitware Inc. under the\nCreative Commons Attribution License Version 3.0.\n\nKitware Inc. agrees to the following:\n\nKitware is free\n * to copy, distribute, display, and perform the work\n * to make derivative works\n * to make commercial use of the work\n\nUnder the following conditions:\n\\\"by Attribution\\\" - Kitware must attribute the work in the manner specified by the author or licensor.\n\n * For any reuse or distribution, they must make clear to others the license terms of this work.\n * Any of these conditions can be waived if they get permission from the copyright holder.\n\nYour fair use and other rights are in no way affected by the above.\n\nThis is a human-readable summary of the Legal Code (the full license) available at\nhttp://creativecommons.org/licenses/by/3.0/legalcode",
    "publication_id": 772,
    "reviews": [],
    "revisions": [
      {
        "article": "bafkreiggi3yerpn7tgf6hf34ocslsidpvyiqsv6amegdlpo4ppjjvfsxee",
        "citation_list": [
          {
            "doi": "10.1109/vis.2005.113",
            "key": "ref1",
            "score": 123.76968,
            "unstructured": "Enabling interactive multiple-view visualizations+org. 1+135+142+2005+L. Bavoil+S.P. Callahan+P.J. Crossno+J. Freire+C.E. Scheidegger+C.T. Silva+H.T. Vo"
          },
          {
            "doi": "10.1109/tvcg.2007.1001",
            "key": "ref2",
            "score": 133.46693,
            "unstructured": "Comparison of four freely available frameworks for image processing and visualization that use ITK+IEEE Trans. Vis+13+483+493+2007+I. Bitter+R. Van Uitert+I. Wolf+L.+J.-M. Kuhnigk"
          },
          {
            "key": "ref3",
            "score": 34.116127,
            "unstructured": "Hybrid scheduling in the DeVIDE dataflow visualisation environment+Proc. Simulation and Visualization+309+322+2008+C.P. Botha+F.H. Post+S. Strassburger"
          },
          {
            "doi": "10.1117/12.878254",
            "key": "ref4",
            "score": 62.366646,
            "unstructured": "Simulink libraries for visual programming of VTK and ITK. In Systems and Architectures for Computer Assisted Interventions+net/10380/1461+2008+D.G. Gobbi+P. Mousavi+K.M. Li+J. Xiang+A. Campigotto+P. Abolmaesumi"
          },
          {
            "key": "ref5",
            "score": 20.103207,
            "unstructured": "2010+org. 2+K. Martin+B. Hoffman"
          },
          {
            "key": "ref6",
            "score": 52.52021,
            "unstructured": "A scientific programming environment for computational steering+org/. 1+1995+S.G. Parker+C.R. Johnson"
          },
          {
            "key": "ref7",
            "score": 59.58273,
            "unstructured": "An Object-Oriented Approach to 3D Graphics. Kitware, Inc+2006+org/. 1+W. Schroeder+K.W. Martin+and W. Lorensen"
          },
          {
            "doi": "10.1117/12.844924",
            "key": "ref8",
            "score": 174.25623,
            "unstructured": "Integrating the visualization concept of the medical imaging interaction toolkit (MITK) into the XIP-Builder visual programming environment+Medical Imaging+2010+7625+I. Wolf+M. Nolden+T. Schwarz+H.-P. Meinzer+M.I. Miga+Image-Guided Procedures"
          }
        ],
        "dapp": null,
        "dataset": null,
        "doi": null,
        "handle": "10380/3226",
        "source_code": "bafybeiemyp7rw32q4weux4aiwa2icuxmfotaiztffyzu2kapxdlssoex2u",
        "source_code_git_ref": null
      }
    ],
    "source_code_git_repo": "https://github.com/midas-journal/midas-journal-772.git",
    "submitted_by_author": {
      "author_email": "david.gobbi@gmail.com",
      "author_firstname": "David",
      "author_fullname": "Gobbi, David",
      "author_id": 881,
      "author_institution": "University of Calgary",
      "author_lastname": "Gobbi"
    },
    "tags": [
      "wrapping",
      "VTK",
      "MATLAB",
      "Simulink",
      "visual programming",
      "ITK"
    ],
    "title": "Visual Programming of VTK Pipelines in Simulink"
  }
}